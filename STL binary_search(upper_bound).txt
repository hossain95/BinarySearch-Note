#include <iostream>
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int BinarySearch(vector<ll>vv, ll key)
{
    vector<ll>::iterator it;
    int position = upper_bound(vv.begin(), vv.end(), key)-vv.begin();
    return position;
}
int main()
{
    ll n;
    cin >> n;                                   // size of the array
    vector<ll>vv;                               // array
    for(int i = 0; i < n; i++)
    {
        ll tem;
        cin >> tem;
        vv.push_back(tem);
    }
    sort(vv.begin(), vv.end());
    int t = 10;
    while(t--)
    {
        ll key;                                     //the key element that we are searching
        cin >> key;
        cout << BinarySearch(vv, key) << endl;
    }
    return 0;
}
/*
|--|---|---|---|---|---|---|---|---|---|---|-----------------------------
|1 | 3 | 3 | 5 | 6 | 7 | 9 | 12| 14| 14| 15|
|--|---|---|---|---|---|---|---|---|---|---|-----------------------------
 0  1    2   3   4   5   6   7   8   9   10

 Search         return index
 1                  1           the value is exist and the value is single so it return immediate greater value index
 3                  3           the value is exist and the value is more then one so upper_bound return immediate greater value index
 4                  3           the value is not exist. so the upper_bound return its immediate greater value index
 16                 11          the value is not exist. so it return its immediate greater value index(here 16 is out of bound of the array so it return n)

*/










